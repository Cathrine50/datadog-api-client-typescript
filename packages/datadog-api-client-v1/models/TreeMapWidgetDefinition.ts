/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { TreeMapColorBy } from "./TreeMapColorBy";
import { TreeMapGroupBy } from "./TreeMapGroupBy";
import { TreeMapSizeBy } from "./TreeMapSizeBy";
import { TreeMapWidgetDefinitionType } from "./TreeMapWidgetDefinitionType";
import { TreeMapWidgetRequest } from "./TreeMapWidgetRequest";

export class TreeMapWidgetDefinition {
  "colorBy": TreeMapColorBy;
  "groupBy": TreeMapGroupBy;
  /**
   * List of top list widget requests.
   */
  "requests": Array<TreeMapWidgetRequest>;
  "sizeBy": TreeMapSizeBy;
  /**
   * Title of your widget.
   */
  "title"?: string;
  "type": TreeMapWidgetDefinitionType;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    colorBy: {
      name: "colorBy",
      baseName: "color_by",
      type: "TreeMapColorBy",
      required: true,
      format: "",
    },
    groupBy: {
      name: "groupBy",
      baseName: "group_by",
      type: "TreeMapGroupBy",
      required: true,
      format: "",
    },
    requests: {
      name: "requests",
      baseName: "requests",
      type: "Array<TreeMapWidgetRequest>",
      required: true,
      format: "",
    },
    sizeBy: {
      name: "sizeBy",
      baseName: "size_by",
      type: "TreeMapSizeBy",
      required: true,
      format: "",
    },
    title: {
      name: "title",
      baseName: "title",
      type: "string",
      required: false,
      format: "",
    },
    type: {
      name: "type",
      baseName: "type",
      type: "TreeMapWidgetDefinitionType",
      required: true,
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return TreeMapWidgetDefinition.attributeTypeMap;
  }

  public constructor() {}
}
