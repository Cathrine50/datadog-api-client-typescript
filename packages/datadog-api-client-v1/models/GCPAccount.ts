/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class GCPAccount {
  /**
   * Should be `https://www.googleapis.com/oauth2/v1/certs`.
   */
  "authProviderX509CertUrl"?: string;
  /**
   * Should be `https://accounts.google.com/o/oauth2/auth`.
   */
  "authUri"?: string;
  /**
   * Silence monitors for expected GCE instance shutdowns.
   */
  "automute"?: boolean;
  /**
   * Your email found in your JSON service account key.
   */
  "clientEmail"?: string;
  /**
   * Your ID found in your JSON service account key.
   */
  "clientId"?: string;
  /**
   * Should be `https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>` where `<CLIENT_EMAIL>` is the email found in your JSON service account key.
   */
  "clientX509CertUrl"?: string;
  /**
   * An array of errors.
   */
  "errors"?: Array<string>;
  /**
   * Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
   */
  "hostFilters"?: string;
  /**
   * Your private key name found in your JSON service account key.
   */
  "privateKey"?: string;
  /**
   * Your private key ID found in your JSON service account key.
   */
  "privateKeyId"?: string;
  /**
   * Your Google Cloud project ID found in your JSON service account key.
   */
  "projectId"?: string;
  /**
   * Should be `https://accounts.google.com/o/oauth2/token`.
   */
  "tokenUri"?: string;
  /**
   * The value for service_account found in your JSON service account key.
   */
  "type"?: string;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    authProviderX509CertUrl: {
      name: "authProviderX509CertUrl",
      baseName: "auth_provider_x509_cert_url",
      type: "string",
      required: false,
      format: "",
    },
    authUri: {
      name: "authUri",
      baseName: "auth_uri",
      type: "string",
      required: false,
      format: "",
    },
    automute: {
      name: "automute",
      baseName: "automute",
      type: "boolean",
      required: false,
      format: "",
    },
    clientEmail: {
      name: "clientEmail",
      baseName: "client_email",
      type: "string",
      required: false,
      format: "",
    },
    clientId: {
      name: "clientId",
      baseName: "client_id",
      type: "string",
      required: false,
      format: "",
    },
    clientX509CertUrl: {
      name: "clientX509CertUrl",
      baseName: "client_x509_cert_url",
      type: "string",
      required: false,
      format: "",
    },
    errors: {
      name: "errors",
      baseName: "errors",
      type: "Array<string>",
      required: false,
      format: "",
    },
    hostFilters: {
      name: "hostFilters",
      baseName: "host_filters",
      type: "string",
      required: false,
      format: "",
    },
    privateKey: {
      name: "privateKey",
      baseName: "private_key",
      type: "string",
      required: false,
      format: "",
    },
    privateKeyId: {
      name: "privateKeyId",
      baseName: "private_key_id",
      type: "string",
      required: false,
      format: "",
    },
    projectId: {
      name: "projectId",
      baseName: "project_id",
      type: "string",
      required: false,
      format: "",
    },
    tokenUri: {
      name: "tokenUri",
      baseName: "token_uri",
      type: "string",
      required: false,
      format: "",
    },
    type: {
      name: "type",
      baseName: "type",
      type: "string",
      required: false,
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return GCPAccount.attributeTypeMap;
  }

  public constructor() {}
}
