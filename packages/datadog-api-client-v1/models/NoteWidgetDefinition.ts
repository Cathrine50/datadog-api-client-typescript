/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { NoteWidgetDefinitionType } from "./NoteWidgetDefinitionType";
import { WidgetTextAlign } from "./WidgetTextAlign";
import { WidgetTickEdge } from "./WidgetTickEdge";
import { WidgetVerticalAlign } from "./WidgetVerticalAlign";

export class NoteWidgetDefinition {
  /**
   * Background color of the note.
   */
  "backgroundColor"?: string;
  /**
   * Content of the note.
   */
  "content": string;
  /**
   * Size of the text.
   */
  "fontSize"?: string;
  /**
   * Whether to add padding or not.
   */
  "hasPadding"?: boolean;
  /**
   * Whether to show a tick or not.
   */
  "showTick"?: boolean;
  "textAlign"?: WidgetTextAlign;
  "tickEdge"?: WidgetTickEdge;
  /**
   * Where to position the tick on an edge.
   */
  "tickPos"?: string;
  "type": NoteWidgetDefinitionType;
  "verticalAlign"?: WidgetVerticalAlign;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
    };
  } = {
    backgroundColor: {
      name: "backgroundColor",
      baseName: "background_color",
      type: "string",
      required: false,
    },
    content: {
      name: "content",
      baseName: "content",
      type: "string",
      required: true,
    },
    fontSize: {
      name: "fontSize",
      baseName: "font_size",
      type: "string",
      required: false,
    },
    hasPadding: {
      name: "hasPadding",
      baseName: "has_padding",
      type: "boolean",
      required: false,
    },
    showTick: {
      name: "showTick",
      baseName: "show_tick",
      type: "boolean",
      required: false,
    },
    textAlign: {
      name: "textAlign",
      baseName: "text_align",
      type: "WidgetTextAlign",
      required: false,
    },
    tickEdge: {
      name: "tickEdge",
      baseName: "tick_edge",
      type: "WidgetTickEdge",
      required: false,
    },
    tickPos: {
      name: "tickPos",
      baseName: "tick_pos",
      type: "string",
      required: false,
    },
    type: {
      name: "type",
      baseName: "type",
      type: "NoteWidgetDefinitionType",
      required: true,
    },
    verticalAlign: {
      name: "verticalAlign",
      baseName: "vertical_align",
      type: "WidgetVerticalAlign",
      required: false,
    },
  };

  static getAttributeTypeMap() {
    return NoteWidgetDefinition.attributeTypeMap;
  }

  public constructor() {}
}
