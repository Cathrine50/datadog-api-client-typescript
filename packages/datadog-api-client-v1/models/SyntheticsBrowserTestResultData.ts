/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SyntheticsDevice } from "./SyntheticsDevice";
import { SyntheticsStepDetail } from "./SyntheticsStepDetail";

export class SyntheticsBrowserTestResultData {
  /**
   * Type of browser device used for the browser test.
   */
  "browserType"?: string;
  /**
   * Browser version used for the browser test.
   */
  "browserVersion"?: string;
  "device"?: SyntheticsDevice;
  /**
   * Global duration in second of the browser test.
   */
  "duration"?: number;
  /**
   * Error returned for the browser test.
   */
  "error"?: string;
  /**
   * Whether or not the browser test was conducted.
   */
  "passed"?: boolean;
  /**
   * The amount of email received during the browser test.
   */
  "receivedEmailCount"?: number;
  /**
   * Starting URL for the browser test.
   */
  "startUrl"?: string;
  /**
   * Array containing the different browser test steps.
   */
  "stepDetails"?: Array<SyntheticsStepDetail>;
  /**
   * Whether or not a thumbnail is associated with the browser test.
   */
  "thumbnailsBucketKey"?: boolean;
  /**
   * Time in second to wait before the browser test starts after reaching the start URL.
   */
  "timeToInteractive"?: number;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    browserType: {
      name: "browserType",
      baseName: "browserType",
      type: "string",
      required: false,
      format: "",
    },
    browserVersion: {
      name: "browserVersion",
      baseName: "browserVersion",
      type: "string",
      required: false,
      format: "",
    },
    device: {
      name: "device",
      baseName: "device",
      type: "SyntheticsDevice",
      required: false,
      format: "",
    },
    duration: {
      name: "duration",
      baseName: "duration",
      type: "number",
      required: false,
      format: "double",
    },
    error: {
      name: "error",
      baseName: "error",
      type: "string",
      required: false,
      format: "",
    },
    passed: {
      name: "passed",
      baseName: "passed",
      type: "boolean",
      required: false,
      format: "",
    },
    receivedEmailCount: {
      name: "receivedEmailCount",
      baseName: "receivedEmailCount",
      type: "number",
      required: false,
      format: "int64",
    },
    startUrl: {
      name: "startUrl",
      baseName: "startUrl",
      type: "string",
      required: false,
      format: "",
    },
    stepDetails: {
      name: "stepDetails",
      baseName: "stepDetails",
      type: "Array<SyntheticsStepDetail>",
      required: false,
      format: "",
    },
    thumbnailsBucketKey: {
      name: "thumbnailsBucketKey",
      baseName: "thumbnailsBucketKey",
      type: "boolean",
      required: false,
      format: "",
    },
    timeToInteractive: {
      name: "timeToInteractive",
      baseName: "timeToInteractive",
      type: "number",
      required: false,
      format: "double",
    },
  };

  static getAttributeTypeMap() {
    return SyntheticsBrowserTestResultData.attributeTypeMap;
  }

  public constructor() {}
}
