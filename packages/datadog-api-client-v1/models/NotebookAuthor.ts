/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class NotebookAuthor {
  /**
   * Creation time of the user.
   */
  "createdAt"?: Date;
  /**
   * Whether the user is disabled.
   */
  "disabled"?: boolean;
  /**
   * Email of the user.
   */
  "email"?: string;
  /**
   * Handle of the user.
   */
  "handle"?: string;
  /**
   * URL of the user's icon.
   */
  "icon"?: string;
  /**
   * Name of the user.
   */
  "name"?: string;
  /**
   * Status of the user.
   */
  "status"?: string;
  /**
   * Title of the user.
   */
  "title"?: string;
  /**
   * Whether the user is verified.
   */
  "verified"?: boolean;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    createdAt: {
      name: "createdAt",
      baseName: "created_at",
      type: "Date",
      required: false,
      format: "date-time",
    },
    disabled: {
      name: "disabled",
      baseName: "disabled",
      type: "boolean",
      required: false,
      format: "",
    },
    email: {
      name: "email",
      baseName: "email",
      type: "string",
      required: false,
      format: "",
    },
    handle: {
      name: "handle",
      baseName: "handle",
      type: "string",
      required: false,
      format: "",
    },
    icon: {
      name: "icon",
      baseName: "icon",
      type: "string",
      required: false,
      format: "",
    },
    name: {
      name: "name",
      baseName: "name",
      type: "string",
      required: false,
      format: "",
    },
    status: {
      name: "status",
      baseName: "status",
      type: "string",
      required: false,
      format: "",
    },
    title: {
      name: "title",
      baseName: "title",
      type: "string",
      required: false,
      format: "",
    },
    verified: {
      name: "verified",
      baseName: "verified",
      type: "boolean",
      required: false,
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return NotebookAuthor.attributeTypeMap;
  }

  public constructor() {}
}
