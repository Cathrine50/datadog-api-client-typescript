/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MonitorOverallStates } from "./MonitorOverallStates";

export class MonitorStateGroup {
  /**
   * Latest timestamp the monitor was in NO_DATA state.
   */
  "lastNodataTs"?: number;
  /**
   * Latest timestamp of the notification sent for this monitor group.
   */
  "lastNotifiedTs"?: number;
  /**
   * Latest timestamp the monitor group was resolved.
   */
  "lastResolvedTs"?: number;
  /**
   * Latest timestamp the monitor group triggered.
   */
  "lastTriggeredTs"?: number;
  /**
   * The name of the monitor.
   */
  "name"?: string;
  "status"?: MonitorOverallStates;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    lastNodataTs: {
      name: "lastNodataTs",
      baseName: "last_nodata_ts",
      type: "number",
      required: false,
      format: "int64",
    },
    lastNotifiedTs: {
      name: "lastNotifiedTs",
      baseName: "last_notified_ts",
      type: "number",
      required: false,
      format: "int64",
    },
    lastResolvedTs: {
      name: "lastResolvedTs",
      baseName: "last_resolved_ts",
      type: "number",
      required: false,
      format: "int64",
    },
    lastTriggeredTs: {
      name: "lastTriggeredTs",
      baseName: "last_triggered_ts",
      type: "number",
      required: false,
      format: "int64",
    },
    name: {
      name: "name",
      baseName: "name",
      type: "string",
      required: false,
      format: "",
    },
    status: {
      name: "status",
      baseName: "status",
      type: "MonitorOverallStates",
      required: false,
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return MonitorStateGroup.attributeTypeMap;
  }

  public constructor() {}
}
