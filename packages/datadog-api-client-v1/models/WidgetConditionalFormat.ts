/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { WidgetComparator } from "./WidgetComparator";
import { WidgetPalette } from "./WidgetPalette";

export class WidgetConditionalFormat {
  "comparator": WidgetComparator;
  /**
   * Color palette to apply to the background, same values available as palette.
   */
  "customBgColor"?: string;
  /**
   * Color palette to apply to the foreground, same values available as palette.
   */
  "customFgColor"?: string;
  /**
   * True hides values.
   */
  "hideValue"?: boolean;
  /**
   * Displays an image as the background.
   */
  "imageUrl"?: string;
  /**
   * Metric from the request to correlate this conditional format with.
   */
  "metric"?: string;
  "palette": WidgetPalette;
  /**
   * Defines the displayed timeframe.
   */
  "timeframe"?: string;
  /**
   * Value for the comparator.
   */
  "value": number;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    comparator: {
      name: "comparator",
      baseName: "comparator",
      type: "WidgetComparator",
      required: true,
      format: "",
    },
    customBgColor: {
      name: "customBgColor",
      baseName: "custom_bg_color",
      type: "string",
      required: false,
      format: "",
    },
    customFgColor: {
      name: "customFgColor",
      baseName: "custom_fg_color",
      type: "string",
      required: false,
      format: "",
    },
    hideValue: {
      name: "hideValue",
      baseName: "hide_value",
      type: "boolean",
      required: false,
      format: "",
    },
    imageUrl: {
      name: "imageUrl",
      baseName: "image_url",
      type: "string",
      required: false,
      format: "",
    },
    metric: {
      name: "metric",
      baseName: "metric",
      type: "string",
      required: false,
      format: "",
    },
    palette: {
      name: "palette",
      baseName: "palette",
      type: "WidgetPalette",
      required: true,
      format: "",
    },
    timeframe: {
      name: "timeframe",
      baseName: "timeframe",
      type: "string",
      required: false,
      format: "",
    },
    value: {
      name: "value",
      baseName: "value",
      type: "number",
      required: true,
      format: "double",
    },
  };

  static getAttributeTypeMap() {
    return WidgetConditionalFormat.attributeTypeMap;
  }

  public constructor() {}
}
