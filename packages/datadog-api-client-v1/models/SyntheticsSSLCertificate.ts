/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SyntheticsSSLCertificateIssuer } from "./SyntheticsSSLCertificateIssuer";
import { SyntheticsSSLCertificateSubject } from "./SyntheticsSSLCertificateSubject";

export class SyntheticsSSLCertificate {
  /**
   * Cipher used for the connection.
   */
  "cipher"?: string;
  /**
   * Exponent associated to the certificate.
   */
  "exponent"?: number;
  /**
   * Array of extensions and details used for the certificate.
   */
  "extKeyUsage"?: Array<string>;
  /**
   * MD5 digest of the DER-encoded Certificate information.
   */
  "fingerprint"?: string;
  /**
   * SHA-1 digest of the DER-encoded Certificate information.
   */
  "fingerprint256"?: string;
  "issuer"?: SyntheticsSSLCertificateIssuer;
  /**
   * Modulus associated to the SSL certificate private key.
   */
  "modulus"?: string;
  /**
   * TLS protocol used for the test.
   */
  "protocol"?: string;
  /**
   * Serial Number assigned by Symantec to the SSL certificate.
   */
  "serialNumber"?: string;
  "subject"?: SyntheticsSSLCertificateSubject;
  /**
   * Date from which the SSL certificate is valid.
   */
  "validFrom"?: Date;
  /**
   * Date until which the SSL certificate is valid.
   */
  "validTo"?: Date;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    cipher: {
      name: "cipher",
      baseName: "cipher",
      type: "string",
      required: false,
      format: "",
    },
    exponent: {
      name: "exponent",
      baseName: "exponent",
      type: "number",
      required: false,
      format: "double",
    },
    extKeyUsage: {
      name: "extKeyUsage",
      baseName: "extKeyUsage",
      type: "Array<string>",
      required: false,
      format: "",
    },
    fingerprint: {
      name: "fingerprint",
      baseName: "fingerprint",
      type: "string",
      required: false,
      format: "",
    },
    fingerprint256: {
      name: "fingerprint256",
      baseName: "fingerprint256",
      type: "string",
      required: false,
      format: "",
    },
    issuer: {
      name: "issuer",
      baseName: "issuer",
      type: "SyntheticsSSLCertificateIssuer",
      required: false,
      format: "",
    },
    modulus: {
      name: "modulus",
      baseName: "modulus",
      type: "string",
      required: false,
      format: "",
    },
    protocol: {
      name: "protocol",
      baseName: "protocol",
      type: "string",
      required: false,
      format: "",
    },
    serialNumber: {
      name: "serialNumber",
      baseName: "serialNumber",
      type: "string",
      required: false,
      format: "",
    },
    subject: {
      name: "subject",
      baseName: "subject",
      type: "SyntheticsSSLCertificateSubject",
      required: false,
      format: "",
    },
    validFrom: {
      name: "validFrom",
      baseName: "validFrom",
      type: "Date",
      required: false,
      format: "date-time",
    },
    validTo: {
      name: "validTo",
      baseName: "validTo",
      type: "Date",
      required: false,
      format: "date-time",
    },
  };

  static getAttributeTypeMap() {
    return SyntheticsSSLCertificate.attributeTypeMap;
  }

  public constructor() {}
}
