/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FormulaAndFunctionQueryDefinition } from "./FormulaAndFunctionQueryDefinition";
import { FormulaAndFunctionResponseFormat } from "./FormulaAndFunctionResponseFormat";
import { LogQueryDefinition } from "./LogQueryDefinition";
import { WidgetFormula } from "./WidgetFormula";

export class GeomapWidgetRequest {
  /**
   * List of formulas that operate on queries. **This feature is currently in beta.**
   */
  "formulas"?: Array<WidgetFormula>;
  "logQuery"?: LogQueryDefinition;
  /**
   * The widget metrics query.
   */
  "q"?: string;
  /**
   * List of queries that can be returned directly or used in formulas. **This feature is currently in beta.**
   */
  "queries"?: Array<FormulaAndFunctionQueryDefinition>;
  "responseFormat"?: FormulaAndFunctionResponseFormat;
  "rumQuery"?: LogQueryDefinition;
  "securityQuery"?: LogQueryDefinition;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
    };
  } = {
    formulas: {
      name: "formulas",
      baseName: "formulas",
      type: "Array<WidgetFormula>",
      required: false,
    },
    logQuery: {
      name: "logQuery",
      baseName: "log_query",
      type: "LogQueryDefinition",
      required: false,
    },
    q: {
      name: "q",
      baseName: "q",
      type: "string",
      required: false,
    },
    queries: {
      name: "queries",
      baseName: "queries",
      type: "Array<FormulaAndFunctionQueryDefinition>",
      required: false,
    },
    responseFormat: {
      name: "responseFormat",
      baseName: "response_format",
      type: "FormulaAndFunctionResponseFormat",
      required: false,
    },
    rumQuery: {
      name: "rumQuery",
      baseName: "rum_query",
      type: "LogQueryDefinition",
      required: false,
    },
    securityQuery: {
      name: "securityQuery",
      baseName: "security_query",
      type: "LogQueryDefinition",
      required: false,
    },
  };

  static getAttributeTypeMap() {
    return GeomapWidgetRequest.attributeTypeMap;
  }

  public constructor() {}
}
