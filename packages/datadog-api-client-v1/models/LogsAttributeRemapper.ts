/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LogsAttributeRemapperType } from "./LogsAttributeRemapperType";
import { TargetFormatType } from "./TargetFormatType";

export class LogsAttributeRemapper {
  /**
   * Whether or not the processor is enabled.
   */
  "isEnabled"?: boolean;
  /**
   * Name of the processor.
   */
  "name"?: string;
  /**
   * Override or not the target element if already set,
   */
  "overrideOnConflict"?: boolean;
  /**
   * Remove or preserve the remapped source element.
   */
  "preserveSource"?: boolean;
  /**
   * Defines if the sources are from log `attribute` or `tag`.
   */
  "sourceType"?: string;
  /**
   * Array of source attributes.
   */
  "sources": Array<string>;
  /**
   * Final attribute or tag name to remap the sources to.
   */
  "target": string;
  "targetFormat"?: TargetFormatType;
  /**
   * Defines if the final attribute or tag name is from log `attribute` or `tag`.
   */
  "targetType"?: string;
  "type": LogsAttributeRemapperType;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
      enumValues?: any;
    };
  } = {
    isEnabled: {
      name: "isEnabled",
      baseName: "is_enabled",
      type: "boolean",
      required: false,
      format: "",
    },
    name: {
      name: "name",
      baseName: "name",
      type: "string",
      required: false,
      format: "",
    },
    overrideOnConflict: {
      name: "overrideOnConflict",
      baseName: "override_on_conflict",
      type: "boolean",
      required: false,
      format: "",
    },
    preserveSource: {
      name: "preserveSource",
      baseName: "preserve_source",
      type: "boolean",
      required: false,
      format: "",
    },
    sourceType: {
      name: "sourceType",
      baseName: "source_type",
      type: "string",
      required: false,
      format: "",
    },
    sources: {
      name: "sources",
      baseName: "sources",
      type: "Array<string>",
      required: true,
      format: "",
    },
    target: {
      name: "target",
      baseName: "target",
      type: "string",
      required: true,
      format: "",
    },
    targetFormat: {
      name: "targetFormat",
      baseName: "target_format",
      type: "TargetFormatType",
      required: false,
      format: "",
    },
    targetType: {
      name: "targetType",
      baseName: "target_type",
      type: "string",
      required: false,
      format: "",
    },
    type: {
      name: "type",
      baseName: "type",
      type: "LogsAttributeRemapperType",
      required: true,
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return LogsAttributeRemapper.attributeTypeMap;
  }

  public constructor() {}
}
