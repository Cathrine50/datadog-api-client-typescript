/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IncidentFieldAttributes } from "./IncidentFieldAttributes";
import { IncidentNotificationHandle } from "./IncidentNotificationHandle";

export class IncidentUpdateAttributes {
  /**
   * Timestamp when customers were no longer impacted by the incident.
   */
  "customerImpactEnd"?: Date;
  /**
   * A summary of the impact customers experienced during the incident.
   */
  "customerImpactScope"?: string;
  /**
   * Timestamp when customers began being impacted by the incident.
   */
  "customerImpactStart"?: Date;
  /**
   * A flag indicating whether the incident caused customer impact.
   */
  "customerImpacted"?: boolean;
  /**
   * Timestamp when the incident was detected.
   */
  "detected"?: Date;
  /**
   * A condensed view of the user-defined fields for which to update selections.
   */
  "fields"?: { [key: string]: IncidentFieldAttributes };
  /**
   * Notification handles that will be notified of the incident during update.
   */
  "notificationHandles"?: Array<IncidentNotificationHandle>;
  /**
   * Timestamp when the incident's state was set to resolved.
   */
  "resolved"?: Date;
  /**
   * The title of the incident, which summarizes what happened.
   */
  "title"?: string;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: {
      name: string;
      baseName: string;
      type: string;
      required: boolean;
      format?: string;
    };
  } = {
    customerImpactEnd: {
      name: "customerImpactEnd",
      baseName: "customer_impact_end",
      type: "Date",
      required: false,
      format: "date-time",
    },
    customerImpactScope: {
      name: "customerImpactScope",
      baseName: "customer_impact_scope",
      type: "string",
      required: false,
    },
    customerImpactStart: {
      name: "customerImpactStart",
      baseName: "customer_impact_start",
      type: "Date",
      required: false,
      format: "date-time",
    },
    customerImpacted: {
      name: "customerImpacted",
      baseName: "customer_impacted",
      type: "boolean",
      required: false,
    },
    detected: {
      name: "detected",
      baseName: "detected",
      type: "Date",
      required: false,
      format: "date-time",
    },
    fields: {
      name: "fields",
      baseName: "fields",
      type: "{ [key: string]: IncidentFieldAttributes; }",
      required: false,
    },
    notificationHandles: {
      name: "notificationHandles",
      baseName: "notification_handles",
      type: "Array<IncidentNotificationHandle>",
      required: false,
    },
    resolved: {
      name: "resolved",
      baseName: "resolved",
      type: "Date",
      required: false,
      format: "date-time",
    },
    title: {
      name: "title",
      baseName: "title",
      type: "string",
      required: false,
    },
  };

  static getAttributeTypeMap() {
    return IncidentUpdateAttributes.attributeTypeMap;
  }

  public constructor() {}
}
